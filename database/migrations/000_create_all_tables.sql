-- =====================================================
-- LIS GPB - CREATE ALL TABLES SCRIPT
-- =====================================================
-- Description: Tạo tất cả bảng cho hệ thống LIS GPB
-- Author: System
-- Date: 2024-01-15
-- Version: 1.0

-- =====================================================
-- DROP EXISTING TABLES (IF EXISTS)
-- =====================================================

-- Drop tables in reverse dependency order
DROP TABLE BML_ROOMS CASCADE CONSTRAINTS;
DROP TABLE BML_DEPARTMENTS CASCADE CONSTRAINTS;
DROP TABLE BML_DEPARTMENT_TYPES CASCADE CONSTRAINTS;
DROP TABLE BML_ROOM_GROUPS CASCADE CONSTRAINTS;
DROP TABLE BML_BRANCHES CASCADE CONSTRAINTS;
DROP TABLE BML_WARDS CASCADE CONSTRAINTS;
DROP TABLE BML_PROVINCES CASCADE CONSTRAINTS;
DROP TABLE BML_USERS CASCADE CONSTRAINTS;

-- =====================================================
-- CREATE BML_USERS TABLE
-- =====================================================

CREATE TABLE BML_USERS (
    -- Primary Key
    ID VARCHAR2(36) PRIMARY KEY,
    
    -- Business Fields
    USERNAME VARCHAR2(50) NOT NULL UNIQUE,
    EMAIL VARCHAR2(100) NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR2(255) NOT NULL,
    FULL_NAME VARCHAR2(100) NOT NULL,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    PHONE_NUMBER VARCHAR2(20),
    DATE_OF_BIRTH TIMESTAMP,
    ADDRESS VARCHAR2(2000),
    
    -- Audit Fields (BaseEntity)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    CREATED_BY VARCHAR2(50),
    UPDATED_BY VARCHAR2(50),
    VERSION NUMBER DEFAULT 1
);

-- =====================================================
-- CREATE BML_PROVINCES TABLE
-- =====================================================

CREATE TABLE BML_PROVINCES (
    -- Primary Key
    ID VARCHAR2(36) PRIMARY KEY,
    
    -- Business Fields
    PROVINCE_CODE VARCHAR2(10) NOT NULL UNIQUE,
    PROVINCE_NAME VARCHAR2(100) NOT NULL,
    SHORT_NAME VARCHAR2(20) NOT NULL,
    SORT_ORDER NUMBER DEFAULT 0,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    
    -- Audit Fields (BaseEntity)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    CREATED_BY VARCHAR2(50),
    UPDATED_BY VARCHAR2(50),
    VERSION NUMBER DEFAULT 1
);

-- =====================================================
-- CREATE BML_WARDS TABLE
-- =====================================================

CREATE TABLE BML_WARDS (
    -- Primary Key
    ID VARCHAR2(36) PRIMARY KEY,
    
    -- Business Fields
    WARD_CODE VARCHAR2(10) NOT NULL UNIQUE,
    WARD_NAME VARCHAR2(100) NOT NULL,
    PROVINCE_ID VARCHAR2(36) NOT NULL,
    SHORT_NAME VARCHAR2(20) NOT NULL,
    SORT_ORDER NUMBER DEFAULT 0,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    
    -- Audit Fields (BaseEntity)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    CREATED_BY VARCHAR2(50),
    UPDATED_BY VARCHAR2(50),
    VERSION NUMBER DEFAULT 1,
    
    -- Foreign Key Constraints
    CONSTRAINT FK_BML_WARDS_PROVINCE 
        FOREIGN KEY (PROVINCE_ID) 
        REFERENCES BML_PROVINCES(ID)
);

-- =====================================================
-- CREATE BML_BRANCHES TABLE
-- =====================================================

CREATE TABLE BML_BRANCHES (
    -- Primary Key
    ID VARCHAR2(36) PRIMARY KEY,
    
    -- Business Fields
    BRANCH_CODE VARCHAR2(20) NOT NULL UNIQUE,
    BRANCH_NAME VARCHAR2(100) NOT NULL,
    SHORT_NAME VARCHAR2(50) NOT NULL,
    PROVINCE_ID VARCHAR2(36) NOT NULL,
    WARD_ID VARCHAR2(36) NOT NULL,
    ADDRESS VARCHAR2(500) NOT NULL,
    PHONE_NUMBER VARCHAR2(20) NOT NULL,
    HOSPITAL_LEVEL VARCHAR2(50) NOT NULL,
    REPRESENTATIVE VARCHAR2(100) NOT NULL,
    BHYT_CODE VARCHAR2(20) NOT NULL,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    
    -- Audit Fields (BaseEntity)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    CREATED_BY VARCHAR2(50),
    UPDATED_BY VARCHAR2(50),
    VERSION NUMBER DEFAULT 1,
    
    -- Foreign Key Constraints
    CONSTRAINT FK_BML_BRANCHES_PROVINCE 
        FOREIGN KEY (PROVINCE_ID) 
        REFERENCES BML_PROVINCES(ID),
    CONSTRAINT FK_BML_BRANCHES_WARD 
        FOREIGN KEY (WARD_ID) 
        REFERENCES BML_WARDS(ID)
);

-- =====================================================
-- CREATE BML_DEPARTMENT_TYPES TABLE
-- =====================================================

CREATE TABLE BML_DEPARTMENT_TYPES (
    -- Primary Key
    ID VARCHAR2(36) PRIMARY KEY,
    
    -- Business Fields
    TYPE_CODE VARCHAR2(20) NOT NULL UNIQUE,
    TYPE_NAME VARCHAR2(100) NOT NULL,
    DESCRIPTION CLOB,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    SORT_ORDER NUMBER DEFAULT 0,
    
    -- Audit Fields (BaseEntity)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    CREATED_BY VARCHAR2(50),
    UPDATED_BY VARCHAR2(50),
    VERSION NUMBER DEFAULT 1
);

-- =====================================================
-- CREATE BML_DEPARTMENTS TABLE
-- =====================================================

CREATE TABLE BML_DEPARTMENTS (
    -- Primary Key
    ID VARCHAR2(36) PRIMARY KEY,
    
    -- Business Fields
    DEPARTMENT_CODE VARCHAR2(20) NOT NULL UNIQUE,
    DEPARTMENT_NAME VARCHAR2(100) NOT NULL,
    BRANCH_ID VARCHAR2(36) NOT NULL,
    HEAD_OF_DEPARTMENT VARCHAR2(100),
    HEAD_NURSE VARCHAR2(100),
    PARENT_DEPARTMENT_ID VARCHAR2(36),
    SHORT_NAME VARCHAR2(50),
    DEPARTMENT_TYPE_ID VARCHAR2(36) NOT NULL,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    SORT_ORDER NUMBER DEFAULT 0,
    
    -- Audit Fields (BaseEntity)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    CREATED_BY VARCHAR2(50),
    UPDATED_BY VARCHAR2(50),
    VERSION NUMBER DEFAULT 1,
    
    -- Foreign Key Constraints
    CONSTRAINT FK_BML_DEPT_BRANCH 
        FOREIGN KEY (BRANCH_ID) 
        REFERENCES BML_BRANCHES(ID),
    CONSTRAINT FK_BML_DEPT_TYPE 
        FOREIGN KEY (DEPARTMENT_TYPE_ID) 
        REFERENCES BML_DEPARTMENT_TYPES(ID),
    CONSTRAINT FK_BML_DEPT_PARENT 
        FOREIGN KEY (PARENT_DEPARTMENT_ID) 
        REFERENCES BML_DEPARTMENTS(ID)
);

-- =====================================================
-- CREATE BML_ROOM_GROUPS TABLE
-- =====================================================

CREATE TABLE BML_ROOM_GROUPS (
    -- Primary Key
    ID VARCHAR2(36) PRIMARY KEY,
    
    -- Business Fields
    ROOM_GROUP_CODE VARCHAR2(20) NOT NULL UNIQUE,
    ROOM_GROUP_NAME VARCHAR2(100) NOT NULL,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    SORT_ORDER NUMBER DEFAULT 0,
    
    -- Audit Fields (BaseEntity)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    CREATED_BY VARCHAR2(50),
    UPDATED_BY VARCHAR2(50),
    VERSION NUMBER DEFAULT 1
);

-- =====================================================
-- CREATE BML_ROOMS TABLE
-- =====================================================

CREATE TABLE BML_ROOMS (
    -- Primary Key
    ID VARCHAR2(36) PRIMARY KEY,
    
    -- Business Fields
    ROOM_CODE VARCHAR2(20) NOT NULL UNIQUE,
    ROOM_NAME VARCHAR2(100) NOT NULL,
    ROOM_ADDRESS VARCHAR2(200),
    DEPARTMENT_ID VARCHAR2(36) NOT NULL,
    ROOM_GROUP_ID VARCHAR2(36) NOT NULL,
    DESCRIPTION CLOB,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    SORT_ORDER NUMBER DEFAULT 0,
    
    -- Audit Fields (BaseEntity)
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP NULL,
    CREATED_BY VARCHAR2(50),
    UPDATED_BY VARCHAR2(50),
    VERSION NUMBER DEFAULT 1,
    
    -- Foreign Key Constraints
    CONSTRAINT FK_BML_ROOMS_DEPT 
        FOREIGN KEY (DEPARTMENT_ID) 
        REFERENCES BML_DEPARTMENTS(ID),
    CONSTRAINT FK_BML_ROOMS_GROUP 
        FOREIGN KEY (ROOM_GROUP_ID) 
        REFERENCES BML_ROOM_GROUPS(ID)
);

-- =====================================================
-- CREATE INDEXES
-- =====================================================

-- BML_USERS Indexes
CREATE INDEX IDX_BML_USERS_USERNAME ON BML_USERS(USERNAME);
CREATE INDEX IDX_BML_USERS_EMAIL ON BML_USERS(EMAIL);
CREATE INDEX IDX_BML_USERS_ACTIVE ON BML_USERS(IS_ACTIVE);
CREATE INDEX IDX_BML_USERS_CREATED_AT ON BML_USERS(CREATED_AT);

-- BML_PROVINCES Indexes
CREATE INDEX IDX_BML_PROVINCES_CODE ON BML_PROVINCES(PROVINCE_CODE);
CREATE INDEX IDX_BML_PROVINCES_NAME ON BML_PROVINCES(PROVINCE_NAME);
CREATE INDEX IDX_BML_PROVINCES_ACTIVE ON BML_PROVINCES(IS_ACTIVE);
CREATE INDEX IDX_BML_PROVINCES_SORT ON BML_PROVINCES(SORT_ORDER);

-- BML_WARDS Indexes
CREATE INDEX IDX_BML_WARDS_CODE ON BML_WARDS(WARD_CODE);
CREATE INDEX IDX_BML_WARDS_NAME ON BML_WARDS(WARD_NAME);
CREATE INDEX IDX_BML_WARDS_PROVINCE ON BML_WARDS(PROVINCE_ID);
CREATE INDEX IDX_BML_WARDS_ACTIVE ON BML_WARDS(IS_ACTIVE);
CREATE INDEX IDX_BML_WARDS_SORT ON BML_WARDS(SORT_ORDER);

-- BML_BRANCHES Indexes
CREATE INDEX IDX_BML_BRANCHES_CODE ON BML_BRANCHES(BRANCH_CODE);
CREATE INDEX IDX_BML_BRANCHES_NAME ON BML_BRANCHES(BRANCH_NAME);
CREATE INDEX IDX_BML_BRANCHES_PROVINCE ON BML_BRANCHES(PROVINCE_ID);
CREATE INDEX IDX_BML_BRANCHES_WARD ON BML_BRANCHES(WARD_ID);
CREATE INDEX IDX_BML_BRANCHES_ACTIVE ON BML_BRANCHES(IS_ACTIVE);

-- BML_DEPARTMENT_TYPES Indexes
CREATE INDEX IDX_BML_DEPT_TYPES_CODE ON BML_DEPARTMENT_TYPES(TYPE_CODE);
CREATE INDEX IDX_BML_DEPT_TYPES_NAME ON BML_DEPARTMENT_TYPES(TYPE_NAME);
CREATE INDEX IDX_BML_DEPT_TYPES_ACTIVE ON BML_DEPARTMENT_TYPES(IS_ACTIVE);
CREATE INDEX IDX_BML_DEPT_TYPES_SORT ON BML_DEPARTMENT_TYPES(SORT_ORDER);

-- BML_DEPARTMENTS Indexes
CREATE INDEX IDX_BML_DEPT_CODE ON BML_DEPARTMENTS(DEPARTMENT_CODE);
CREATE INDEX IDX_BML_DEPT_NAME ON BML_DEPARTMENTS(DEPARTMENT_NAME);
CREATE INDEX IDX_BML_DEPT_BRANCH ON BML_DEPARTMENTS(BRANCH_ID);
CREATE INDEX IDX_BML_DEPT_TYPE ON BML_DEPARTMENTS(DEPARTMENT_TYPE_ID);
CREATE INDEX IDX_BML_DEPT_PARENT ON BML_DEPARTMENTS(PARENT_DEPARTMENT_ID);
CREATE INDEX IDX_BML_DEPT_ACTIVE ON BML_DEPARTMENTS(IS_ACTIVE);
CREATE INDEX IDX_BML_DEPT_SORT ON BML_DEPARTMENTS(SORT_ORDER);

-- BML_ROOM_GROUPS Indexes
CREATE INDEX IDX_BML_RG_CODE ON BML_ROOM_GROUPS(ROOM_GROUP_CODE);
CREATE INDEX IDX_BML_RG_NAME ON BML_ROOM_GROUPS(ROOM_GROUP_NAME);
CREATE INDEX IDX_BML_RG_ACTIVE ON BML_ROOM_GROUPS(IS_ACTIVE);
CREATE INDEX IDX_BML_RG_SORT ON BML_ROOM_GROUPS(SORT_ORDER);

-- BML_ROOMS Indexes
CREATE INDEX IDX_BML_ROOMS_CODE ON BML_ROOMS(ROOM_CODE);
CREATE INDEX IDX_BML_ROOMS_NAME ON BML_ROOMS(ROOM_NAME);
CREATE INDEX IDX_BML_ROOMS_DEPT ON BML_ROOMS(DEPARTMENT_ID);
CREATE INDEX IDX_BML_ROOMS_GROUP ON BML_ROOMS(ROOM_GROUP_ID);
CREATE INDEX IDX_BML_ROOMS_ACTIVE ON BML_ROOMS(IS_ACTIVE);
CREATE INDEX IDX_BML_ROOMS_SORT ON BML_ROOMS(SORT_ORDER);

-- =====================================================
-- CREATE TRIGGERS
-- =====================================================

-- Update triggers for all tables
CREATE OR REPLACE TRIGGER TR_BML_USERS_UPDATE
    BEFORE UPDATE ON BML_USERS
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
    :NEW.VERSION := :OLD.VERSION + 1;
END;
/

CREATE OR REPLACE TRIGGER TR_BML_PROVINCES_UPDATE
    BEFORE UPDATE ON BML_PROVINCES
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
    :NEW.VERSION := :OLD.VERSION + 1;
END;
/

CREATE OR REPLACE TRIGGER TR_BML_WARDS_UPDATE
    BEFORE UPDATE ON BML_WARDS
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
    :NEW.VERSION := :OLD.VERSION + 1;
END;
/

CREATE OR REPLACE TRIGGER TR_BML_BRANCHES_UPDATE
    BEFORE UPDATE ON BML_BRANCHES
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
    :NEW.VERSION := :OLD.VERSION + 1;
END;
/

CREATE OR REPLACE TRIGGER TR_BML_DEPT_TYPES_UPDATE
    BEFORE UPDATE ON BML_DEPARTMENT_TYPES
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
    :NEW.VERSION := :OLD.VERSION + 1;
END;
/

CREATE OR REPLACE TRIGGER TR_BML_DEPARTMENTS_UPDATE
    BEFORE UPDATE ON BML_DEPARTMENTS
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
    :NEW.VERSION := :OLD.VERSION + 1;
END;
/

CREATE OR REPLACE TRIGGER TR_BML_ROOM_GROUPS_UPDATE
    BEFORE UPDATE ON BML_ROOM_GROUPS
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
    :NEW.VERSION := :OLD.VERSION + 1;
END;
/

CREATE OR REPLACE TRIGGER TR_BML_ROOMS_UPDATE
    BEFORE UPDATE ON BML_ROOMS
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
    :NEW.VERSION := :OLD.VERSION + 1;
END;
/

-- =====================================================
-- CREATE COMMENTS
-- =====================================================

-- Table Comments
COMMENT ON TABLE BML_USERS IS 'Bảng quản lý người dùng hệ thống LIS GPB';
COMMENT ON TABLE BML_PROVINCES IS 'Bảng quản lý tỉnh/thành phố';
COMMENT ON TABLE BML_WARDS IS 'Bảng quản lý xã/phường/thị trấn';
COMMENT ON TABLE BML_BRANCHES IS 'Bảng quản lý chi nhánh bệnh viện';
COMMENT ON TABLE BML_DEPARTMENT_TYPES IS 'Bảng quản lý loại khoa';
COMMENT ON TABLE BML_DEPARTMENTS IS 'Bảng quản lý khoa/phòng ban';
COMMENT ON TABLE BML_ROOM_GROUPS IS 'Bảng quản lý nhóm phòng';
COMMENT ON TABLE BML_ROOMS IS 'Bảng quản lý phòng';

-- =====================================================
-- VERIFY CREATION
-- =====================================================

-- Verify all tables created
SELECT 'BML_USERS' as TABLE_NAME, COUNT(*) as RECORD_COUNT FROM BML_USERS
UNION ALL
SELECT 'BML_PROVINCES', COUNT(*) FROM BML_PROVINCES
UNION ALL
SELECT 'BML_WARDS', COUNT(*) FROM BML_WARDS
UNION ALL
SELECT 'BML_BRANCHES', COUNT(*) FROM BML_BRANCHES
UNION ALL
SELECT 'BML_DEPARTMENT_TYPES', COUNT(*) FROM BML_DEPARTMENT_TYPES
UNION ALL
SELECT 'BML_DEPARTMENTS', COUNT(*) FROM BML_DEPARTMENTS
UNION ALL
SELECT 'BML_ROOM_GROUPS', COUNT(*) FROM BML_ROOM_GROUPS
UNION ALL
SELECT 'BML_ROOMS', COUNT(*) FROM BML_ROOMS;

-- Verify indexes
SELECT TABLE_NAME, INDEX_NAME, INDEX_TYPE, STATUS 
FROM USER_INDEXES 
WHERE TABLE_NAME LIKE 'BML_%'
ORDER BY TABLE_NAME, INDEX_NAME;

-- Verify constraints
SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE, STATUS 
FROM USER_CONSTRAINTS 
WHERE TABLE_NAME LIKE 'BML_%'
ORDER BY TABLE_NAME, CONSTRAINT_NAME;

COMMIT;
